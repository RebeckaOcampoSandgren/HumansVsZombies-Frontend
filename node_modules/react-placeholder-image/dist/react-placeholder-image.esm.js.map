{"version":3,"file":"react-placeholder-image.esm.js","sources":["../src/util.ts","../src/components/CustomPlaceholder.tsx","../src/components/PhotoPlaceholder.ts"],"sourcesContent":["/**\n * Removes any properties that undefined\n * @param obj - any object\n */\nexport function removeUndefined(obj: { [key: string]: any }) {\n  return Object.entries(obj).reduce<{ [key: string]: any }>(\n    (acc, [key, value]) => {\n      if (value !== undefined) {\n        acc[key] = value;\n      }\n\n      return acc;\n    },\n    {}\n  );\n}\n\n/**\n * An id that can be appended to a URL in order to identify a particular image within a browser cache\n *\n * Many random-image-generating services will return different images for the same URL,\n * but the browser will cache the result for the first request and will serve the cached response for subsequent requests\n * which means that all requests will effectively return the _same_ image every time.\n * So, we circumvent the browser's caching by appending a unique id to each request which ensures a cache-miss\n */\nexport function generateCacheId() {\n  return (Math.random() * 100000).toFixed(0);\n}\n","import * as React from 'react';\nimport url from 'url';\nimport { removeUndefined } from '../util';\n\n/**\n * Checks whether the input string is valid hex and then removes the hash\n * @param {string} hex\n */\nfunction sanitizeHex(hex: string) {\n  if (!/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(hex)) {\n    throw new Error(`Expected valid hex color, got \"${hex}\"`);\n  }\n\n  return hex.substring(1); // remove the hash\n}\n\n/**\n * Generates a URL for a custom placeholder image\n *\n * @param {number} width\n * @param {number} height\n * @param {object} [options]\n * @param {string} [options.backgroundColor={a light gray}]\n * @param {string} [options.text={the size of the image e.g. \"200x100\"}]\n * @param {string} [options.textColor={auto-contrast with backgroundColor}]\n */\nexport function generateCustomPlaceholderURL(\n  width: number,\n  height: number,\n  options: {\n    backgroundColor?: string;\n    textColor?: string;\n    text?: string;\n  } = {}\n) {\n  const { backgroundColor, textColor, text } = options;\n\n  return url.format({\n    protocol: 'https',\n    host: 'via.placeholder.com',\n    pathname: [\n      `${width}x${height}`,\n      backgroundColor ? sanitizeHex(backgroundColor) : '',\n      textColor ? sanitizeHex(textColor) : undefined,\n    ]\n      .filter(part => part !== undefined)\n      .join('/'),\n    query: removeUndefined({\n      text,\n    }),\n  });\n}\n\nexport const CustomPlaceholder = (\n  props: JSX.IntrinsicElements['img'] & {\n    width: number;\n    height: number;\n    backgroundColor?: string;\n    textColor?: string;\n    text?: string;\n  }\n): React.DetailedReactHTMLElement<\n  React.ImgHTMLAttributes<HTMLImageElement>,\n  HTMLImageElement\n> => {\n  const {\n    width,\n    height,\n    backgroundColor,\n    textColor,\n    text,\n    src,\n    ...htmlProps\n  } = props;\n\n  if (src !== undefined) {\n    console.warn(\n      'Do not define the `src` prop for <CustomPlaceholder />; the src will be generated'\n    );\n  }\n\n  return React.createElement('img', {\n    src: generateCustomPlaceholderURL(width, height, {\n      backgroundColor,\n      textColor,\n      text,\n    }),\n    alt: 'placeholder',\n    ...htmlProps,\n  });\n};\n","import * as React from 'react';\nimport url from 'url';\nimport { removeUndefined, generateCacheId } from '../util';\n\n/**\n * Generates a URL for a random placeholder photo\n *\n * @param {number} width\n * @param {number} height\n * @param {object} [options]\n * @param {string} [options.grayscale={boolean}]\n */\nexport function generatePhotoPlaceholderURL(\n  width: number,\n  height: number,\n  options: {\n    grayscale?: boolean;\n  } = {}\n) {\n  const { grayscale = false } = options;\n\n  return url.format({\n    protocol: 'https',\n    host: 'picsum.photos',\n    pathname: `/${width}/${height}`,\n    query: removeUndefined({\n      // if grayscale query param is present, the image will be grayscale, even if it is grayscale=false or grayscale=<nothing>\n      // so we completely omit the key if grayscale is not true\n      grayscale: grayscale ? grayscale : undefined,\n      // automatically cache-bust the url so that same-size images on the page don't get the same image\n      cacheId: generateCacheId(),\n    }),\n  });\n}\n\nexport const PhotoPlaceholder = (\n  props: JSX.IntrinsicElements['img'] & {\n    width: number;\n    height: number;\n    grayscale?: boolean;\n  }\n): React.DetailedReactHTMLElement<\n  React.ImgHTMLAttributes<HTMLImageElement>,\n  HTMLImageElement\n> => {\n  const { width, height, grayscale, src, ...htmlProps } = props;\n\n  if (src !== undefined) {\n    console.warn(\n      'Do not define the `src` prop for <PhotoPlaceholder />; the src will be generated'\n    );\n  }\n\n  const [url, setURL] = React.useState<string | undefined>(undefined);\n\n  // generating the URL is side-effectful because it generates a new random cache-busting query param\n  // we use layout effect so that the url is calculated before the element is flushed to the DOM\n  React.useLayoutEffect(() => {\n    setURL(\n      generatePhotoPlaceholderURL(width, height, {\n        grayscale,\n      })\n    );\n  }, [width, height, grayscale]);\n\n  return React.createElement('img', {\n    src: url,\n    alt: 'Placeholder',\n    ...htmlProps,\n  });\n};\n"],"names":["removeUndefined","obj","Object","entries","reduce","acc","key","value","undefined","generateCacheId","Math","random","toFixed","sanitizeHex","hex","test","Error","substring","generateCustomPlaceholderURL","width","height","options","backgroundColor","textColor","text","url","format","protocol","host","pathname","filter","part","join","query","CustomPlaceholder","props","src","htmlProps","console","warn","React","alt","generatePhotoPlaceholderURL","grayscale","cacheId","PhotoPlaceholder","setURL"],"mappings":"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"}